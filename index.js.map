{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const API_KEY = '47542274-6332373665e9da78801fe67b7'; \nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport async function fetchImages(query, page = 1, perPage = 12) {\n  const url = `${BASE_URL}?key=${API_KEY}&q=${query}&image_type=photo&orientation=horizontal&safesearch=true&page=${page}&per_page=${perPage}`;\n  \n  try {\n    const response = await fetch(url);\n    if (!response.ok) throw new Error('Failed to fetch images');\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching images:', error.message);\n    throw error;\n  }\n}","export function displayImages(images, galleryElement) {\n  galleryElement.innerHTML = ''; // Очищення галереї перед додаванням нових зображень\n\n  if (images.hits.length === 0) {\n    iziToast.info({\n      title: 'Info',\n      message: 'Sorry, there are no images matching your search query. Please try again!',\n    });\n    return;\n  }\n\n  const markup = images.hits\n    .map(\n      (image) => `\n      <div class=\"gallery-item\">\n        <a href=\"${image.largeImageURL}\">\n          <img src=\"${image.webformatURL}\" alt=\"${image.tags}\" class=\"gallery-image\" />\n        </a>\n        <div class=\"image-info\">\n        <p><strong>Tags:</strong> ${image.tags}</p>\n          <p>Likes: ${image.likes}</p>\n          <p>Views: ${image.views}</p>\n          <p>Comments: ${image.comments}</p>\n          <p>Downloads: ${image.downloads}</p>\n        </div>\n      </div>\n    `\n    )\n    .join('');\n\n  galleryElement.insertAdjacentHTML('beforeend', markup);\n\n  // Оновлення lightbox\n  setTimeout(() => {\n    lightbox.refresh();\n  }, 0);\n}\n\n\n \n","// SimpleLightbox\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\n// iziToast\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// Custom CSS\nimport './css/styles.css';\n\nimport { fetchImages as pixabayFetchImages } from './js/pixabay-api.js'; // Импорт API-запросов\nimport { displayImages } from './js/render-functions.js';\n\n\nconst lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\nconst searchForm = document.getElementById('search-form');\nconst gallery = document.getElementById('gallery');\nconst loader = document.getElementById('loader');\n\n// Функции для управления загрузчиком\nfunction showLoader() {\n  loader.style.display = 'block';\n}\n\nfunction hideLoader() {\n  loader.style.display = 'none';\n}\n\n// Обновленная функция fetchImages с управлением загрузчиком\nasync function fetchImages(query) {\n  try {\n    showLoader();\n      const response = await pixabayFetchImages(query);\n      console.log('API Response:', response);  // Проверяем ответ API\n    return response; // Возвращаем результат\n  } catch (error) {\n    console.error('Error fetching images:', error);\n    throw error; // Пробрасываем ошибку дальше\n  } finally {\n    hideLoader();\n  }\n}\n\n// Обработчик отправки формы\nsearchForm.addEventListener('submit', async (event) => {\n  event.preventDefault();\n  console.log('Form submitted');\n\n  const searchQuery = searchForm.elements.query.value.trim();\n  if (!searchQuery) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Please enter a search term.',\n    });\n    return;\n  }\n\n  // Очистка галереи перед новым запросом\n  gallery.innerHTML = '';\n\n  try {\n    const images = await fetchImages(searchQuery); \n      displayImages(images, gallery);\n      lightbox.refresh();\n  } catch (error) {\n      console.log(error);\n    iziToast.error({\n      title: 'Error',\n      message: 'Failed to fetch images.',\n    });\n  }\n});\n\n// Функция для отображения изображений перенесла в рендер\n"],"names":["API_KEY","BASE_URL","fetchImages","query","page","perPage","url","response","error","displayImages","images","galleryElement","markup","image","lightbox","SimpleLightbox","searchForm","gallery","loader","showLoader","hideLoader","pixabayFetchImages","event","searchQuery","iziToast"],"mappings":"4xBAAA,MAAMA,EAAU,qCACVC,EAAW,2BAEV,eAAeC,EAAYC,EAAOC,EAAO,EAAGC,EAAU,GAAI,CAC/D,MAAMC,EAAM,GAAGL,CAAQ,QAAQD,CAAO,MAAMG,CAAK,iEAAiEC,CAAI,aAAaC,CAAO,GAE1I,GAAI,CACF,MAAME,EAAW,MAAM,MAAMD,CAAG,EAChC,GAAI,CAACC,EAAS,GAAI,MAAM,IAAI,MAAM,wBAAwB,EAC1D,OAAO,MAAMA,EAAS,MACvB,OAAQC,EAAO,CACd,cAAQ,MAAM,yBAA0BA,EAAM,OAAO,EAC/CA,CACP,CACH,CCdO,SAASC,EAAcC,EAAQC,EAAgB,CAGpD,GAFAA,EAAe,UAAY,GAEvBD,EAAO,KAAK,SAAW,EAAG,CAC5B,SAAS,KAAK,CACZ,MAAO,OACP,QAAS,0EACf,CAAK,EACD,MACD,CAED,MAAME,EAASF,EAAO,KACnB,IACEG,GAAU;AAAA;AAAA,mBAEEA,EAAM,aAAa;AAAA,sBAChBA,EAAM,YAAY,UAAUA,EAAM,IAAI;AAAA;AAAA;AAAA,oCAGxBA,EAAM,IAAI;AAAA,sBACxBA,EAAM,KAAK;AAAA,sBACXA,EAAM,KAAK;AAAA,yBACRA,EAAM,QAAQ;AAAA,0BACbA,EAAM,SAAS;AAAA;AAAA;AAAA,KAIpC,EACA,KAAK,EAAE,EAEVF,EAAe,mBAAmB,YAAaC,CAAM,EAGrD,WAAW,IAAM,CACf,SAAS,QAAO,CACjB,EAAE,CAAC,CACN,CCrBA,MAAME,EAAW,IAAIC,EAAe,aAAc,CAChD,aAAc,MACd,aAAc,GAChB,CAAC,EAEKC,EAAa,SAAS,eAAe,aAAa,EAClDC,EAAU,SAAS,eAAe,SAAS,EAC3CC,EAAS,SAAS,eAAe,QAAQ,EAG/C,SAASC,GAAa,CACpBD,EAAO,MAAM,QAAU,OACzB,CAEA,SAASE,GAAa,CACpBF,EAAO,MAAM,QAAU,MACzB,CAGA,eAAehB,EAAYC,EAAO,CAChC,GAAI,CACFgB,IACE,MAAMZ,EAAW,MAAMc,EAAmBlB,CAAK,EAC/C,eAAQ,IAAI,gBAAiBI,CAAQ,EAChCA,CACR,OAAQC,EAAO,CACd,cAAQ,MAAM,yBAA0BA,CAAK,EACvCA,CACV,QAAY,CACRY,GACD,CACH,CAGAJ,EAAW,iBAAiB,SAAU,MAAOM,GAAU,CACrDA,EAAM,eAAc,EACpB,QAAQ,IAAI,gBAAgB,EAE5B,MAAMC,EAAcP,EAAW,SAAS,MAAM,MAAM,OACpD,GAAI,CAACO,EAAa,CAChBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,6BACf,CAAK,EACD,MACD,CAGDP,EAAQ,UAAY,GAEpB,GAAI,CACF,MAAMP,EAAS,MAAMR,EAAYqB,CAAW,EAC1Cd,EAAcC,EAAQO,CAAO,EAC7BH,EAAS,QAAO,CACnB,OAAQN,EAAO,CACZ,QAAQ,IAAIA,CAAK,EACnBgB,EAAS,MAAM,CACb,MAAO,QACP,QAAS,yBACf,CAAK,CACF,CACH,CAAC"}